name: CI Pipeline

on:
  workflow_call:
    inputs:
      # Inputs para o determine-release-version.yaml
      bump-type:
        required: true
        type: string
        description: Type of version bump (e.g., patch, minor, major)
      prefix:
        required: true
        type: string
        description: Prefix for the release version
      preid:
        required: false
        type: string
        description: Identifier for prerelease versions (e.g., alpha, beta)
      per-branch:
        required: false
        type: boolean
        description: "Only consider tags from the current branch (default: false)"

      # Inputs para o build-image-to-ecr-v2.yaml
      docker-build-args:
        required: false
        type: string
        description: Docker build arguments
      docker-build-target:
        required: false
        type: string
        description: Docker build target
      docker-build-context:
        required: true
        type: string
        description: Docker build context
      docker-file-path:
        required: true
        type: string
        description: Path to the Dockerfile
      environment:
        required: true
        type: string
        description: Deployment environment
      public-repository:
        required: false
        type: boolean
        description: Is the repository public?
        default: false

      # Inputs para o create-release.yaml
      sha:
        required: false
        type: string
        description: Commit SHA to create the tag (optional, used if dry-run was used previously)
      prerelease:
        required: false
        type: boolean
        description: "Mark the release as a prerelease (default: false)"
      body:
        required: false
        type: string
        description: Body content for the release notes
      body-file:
        required: false
        type: string
        description: Path to a file containing the release notes

    secrets:
      GH_ACCESS_TOKEN:
        required: true
      GH_TOKEN:
        required: true
      PIP_EXTRA_INDEX_URL:
        required: false
      REQUIREMENTS:
        required: false

jobs:
  determine-release-version:
    uses: ./.github/workflows/determine-release-version.yml
    with:
      bump-type: ${{ inputs.bump-type }}
      prefix: ${{ inputs.prefix }}
      preid: ${{ inputs.preid }}
      per-branch: ${{ inputs.per-branch }}
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

  build:
    needs: determine-release-version
    uses: ./.github/workflows/build-image-to-ecr-v2.yml
    with:
      docker-build-args: ${{ inputs.docker-build-args }}
      docker-build-target: ${{ inputs.docker-build-target }}
      docker-build-context: ${{ inputs.docker-build-context }}
      docker-file-path: ${{ inputs.docker-file-path }}
      docker-tag: ${{ needs.determine-release-version.outputs.release-tag }}
      environment: ${{ inputs.environment }}
      public-repository: ${{ inputs.public-repository }}
    secrets:
      GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      PIP_EXTRA_INDEX_URL: ${{ secrets.PIP_EXTRA_INDEX_URL }}
      REQUIREMENTS: ${{ secrets.REQUIREMENTS }}

  create-release:
    needs: build
    uses: ./.github/workflows/create-release.yml
    with:
      bump-type: ${{ inputs.bump-type }}
      prefix: ${{ inputs.prefix }}
      preid: ${{ inputs.preid }}
      per-branch: ${{ inputs.per-branch }}
      sha: ${{ inputs.sha || needs.determine-release-version.outputs.release-tag }}
      prerelease: ${{ inputs.prerelease }}
      body: ${{ inputs.body }}
      body-file: ${{ inputs.body-file }}
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}