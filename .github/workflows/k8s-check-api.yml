name: Kubent - check api deprecated K8S

on:
  workflow_call:
    inputs:
      helm-path:
        required: false
        type: string
        default: ./
      k8s-version:
        required: false
        type: string
        default: 1.26

env:
  TERM: xterm-256color

jobs:
  k8s-check-api:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:

    - name: Kubernetes Environment
      uses: helm/kind-action@v1.5.0

    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Helm
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

    - name: Install kubectl
      run: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl

    - name: Install Kubent
      run: |
        curl -sSL https://git.io/install-kubent > ./installer.sh
        chmod +x ./installer.sh
        ./installer.sh

    - name: Launch Kubent
      run: |
        # Definiçao do diretório para pesquisar
        dir=${{ inputs.helm-path }}

        # Define the file name pattern to search for using regex
        pattern=".*value.*\.\(yaml\|yml\)$"

        # Procura arquivos com base no regex nos diretório e subdiretórios
        for file in $(find $dir -regex $pattern -type f); do
          # Recupera o diretório do arquivo
          file_dir=$(dirname "$file")
          echo ⎈⎈⎈ $file ⎈⎈⎈
          # Executa o comando helm template + kubent no arquivo encontrado
          helm template $file_dir -f $file | kubent --filename=- --cluster=false --target-version=${{ inputs.k8s-version }}
        done
      shell: bash
