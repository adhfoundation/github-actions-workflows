name: Build docker image

on:
  workflow_call:
    inputs:
      docker-build-args:
        required: false
        type: string
        description: docker build args
      docker-build-target:
        required: false
        type: string
        description: Docker Image target during build
      docker-build-context:
        required: false
        type: string
        description: Dockerfile dir
        default: '.'
      docker-file-path:
        required: false
        type: string
        description: Dockerfile path
        default: 'Dockerfile'
      docker-tag:
        required: true
        type: string
        description: Tag to be linked on ECR
      environment:
        required: true
        type: string
        description: Environment
      public-repository:
        required: false
        type: boolean
        description: Is the repository public?
        default: false
      ecr-url:
        required: false
        type: string
        description: Is the repository public?
        default: "{{ vars.ECR_URL }}"
      ecr-repo:
        required: false
        type: string
        description: Is the repository public?
        default: "{{ vars.ECR_REPO }}"
    secrets:
      GH_ACCESS_TOKEN:
        required: false
      PIP_EXTRA_INDEX_URL:
        required: false
      REQUIREMENTS:
        required: false

env:
  TERM: xterm-256color

jobs:
  build:
    runs-on: ubuntu-22.04
    environment: ${{ inputs.environment }}
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      contents: read
      id-token: write
      pull-requests: none
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_CREDS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR Public
        if: inputs.public-repository == true
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Login to Private ECR ${{ inputs.ecr-url }}
        if: inputs.public-repository == false
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.ecr-url }}

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ${{ inputs.docker-build-context }}
          target: ${{ inputs.docker-build-target }}
          file: ${{ inputs.docker-file-path }}
          tags: |
            ${{ inputs.ecr-url }}/${{ inputs.ecr-repo }}:latest
            ${{ inputs.ecr-url }}/${{ inputs.ecr-repo }}:${{ inputs.docker-tag }}
          build-args: |
            GH_ACCESS_TOKEN=${{ secrets.GH_ACCESS_TOKEN }}
            PIP_EXTRA_INDEX_URL=${{ secrets.PIP_EXTRA_INDEX_URL }}
            ${{ inputs.docker-build-args }}